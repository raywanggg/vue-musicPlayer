swagger: '2.0'
info:
  title: music-player API
  description: music-player API
  version: 1.0.0
host: localhost:8087
schemes:
  - http
basePath: /api/v1
produces:
  - application/json
paths:
  /songs/mine:
    get:
      summary: my songs list
      description:
        获取我的音乐列表
      parameters:
        - name: page
          required: false
          in: query
          type: number
          default: 1
        - name: size
          required: false
          in: query
          type: number
          default: 8
      tags:
        - Song
      responses:
        '200':
          description: the result of the songs list request
          schema:
            $ref: '#/definitions/SongsRst'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
  /songs/rank:
    get:
      summary: songs list of ranking
      description:
        获取歌曲排名列表
      parameters:
        - name: page
          required: false
          in: query
          type: number
          default: 1
        - name: size
          required: false
          in: query
          type: number
          default: 8
      tags:
        - Song
      responses:
        '200':
          description: the result of the songs list request
          schema:
            type: array
            items:
              type: array
              items:
                $ref: '#/definitions/Song'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
  /songs/search:
    get:
      summary: songs list of search result
      description:
        获取歌曲排名列表
      parameters:
        - name: key
          required: true
          in: query
          type: string
        - name: page
          required: false
          in: query
          type: number
          default: 1
        - name: size
          required: false
          in: query
          type: number
          default: 8
      tags:
        - Song
      responses:
        '200':
          description: the result of the songs list request
          schema:
            $ref: '#/definitions/SongsRst'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
  /songs/recommend:
    get:
      summary: songs list of recommending result
      description:
        获取推荐歌曲列表
      parameters:
        - name: size
          required: false
          in: query
          type: number
          default: 8
      tags:
        - Song
      responses:
        '200':
          description: the result of the songs list request
          schema:
            type: array
            items:
              $ref: '#/definitions/Song'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
  '/songs/{id}':
    get:
      summary: a song
      description: 
        获取单首歌曲
      tags:
        - Song
      parameters:
        - name: id
          required: true
          in: path
          type: number
      responses:
        '200':
          description: the detail content of a song
          schema:
            $ref: '#/definitions/Song'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
  '/songs/collection/{id}':
    put:
      summary: to give or to cancel a collection for  the song
      description: 
        收藏/取消收藏单首歌曲
      tags:
        - Song
      parameters:
        - name: id
          required: true
          in: path
          type: number
      responses:
        '200':
          description: success
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
  '/songs':
    post:
      summary: batch search by ids
      description: 
        通过id数组批量获取歌曲信息
      tags:
        - Song
      consumes:
        - application/x-www-form-urlencoded
      parameters:
        - name: ids
          required: true
          in: body
          type: string
      responses:
        '200':
          description: array of songs
          schema:
            type: array
            items:
              $ref: '#/definitions/Song'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
  '/lyrics/{md5}':
    get:
      summary: a lyric
      description: 
        获取单首歌词
      tags:
        - Lyric
      parameters:
        - name: md5
          required: true
          in: path
          type: string
      responses:
        '200':
          description: the lyric of a song
          schema:
            $ref: '#/definitions/Lyric'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
definitions:
  SongsRst:
    type: object
    properties:
      data:
        type: array
        items: 
          $ref: '#/definitions/Song'
        description: the list of songs
      totalNum:
        type: number
        description: the number of total songs
      page:
        type: number
        description: the page number
      size:
        type: number
        description: the number of songs that returned
  Song:
    type: object
    properties:
      id:
        type: number
        description: Unique identifier.
      name:
        type: string
        description: The name of the song.
      singer:
        type: string
        description: The singer of the song.
      composer:
        type: string
        description: The composer of the song.
      lyricist:
        type: string
        description: The lyricist of the song.
      md5:
        type: string
        description: md5.
      album:
        type: string
        description: The album of the song.
      album_img:
        type: string
        description: The album image of the song.
      liked:
        type: number
        description: The number of likes.
      isCollected:
        type: boolean
        description: isCollected field.
  Lyric:
    type: object
    properties:
      lyric:
        type: string
        description: The lyric of the song.
  Error:
    type: object
    properties:
      code:
        type: integer
        format: int32
      message:
        type: string
      fields:
        type: string
